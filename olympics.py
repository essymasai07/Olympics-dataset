import pandas as pd
df1 = pd.read_csv('dataset_olympics.csv')
print(df1.head())
print(df1.shape)
print(df1.head())
print(df1.columns)
print(df1.isnull().sum())
data1 = df1.drop_duplicates()
print(data1.dtypes)
print(data1.isnull().sum())
mean_age= data1['Age'].mean()
data1['Age'].fillna(mean_age, inplace=True)
print(data1.isnull().sum())
from sklearn.ensemble import HistGradientBoostingRegressor
correlated_features= ['Age', 'Weight']
data_correlated= data1[correlated_features + ['Height']]
data_with_height= data_correlated.dropna(subset=['Height'])
data_missing_height= data_correlated[data_correlated['Height'].isnull()]
X_train= data_with_height[correlated_features]
y_train=data_with_height['Height']
model= HistGradientBoostingRegressor()
model.fit(X_train, y_train)
predicted_heights=model.predict(data_missing_height[correlated_features])
data1['Height'].fillna(pd.Series(predicted_heights, index=data_missing_height.index), inplace=True)
print(data1.isnull().sum())
median_age= data1['Weight'].median()
data1['Weight'].fillna(median_age, inplace=True)
data1['Medal'].fillna('No Medal', inplace=True)
print(data1.isnull().sum())
print(data1.describe())
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
graph1= sns.histplot(data=data1, x='Year', hue='Season', stat='count', multiple='layer', element='bars')
graph1.set_title('The History of Olymic Games')
plt.show()
from matplotlib.ticker import MultipleLocator, FixedLocator, FormatStrFormatter
ax= sns.displot(data=data1, x='Age', kind='kde', height=7, aspect=3, hue='Sex')
ax.set_axis_labels('Age', 'Density')
ax.set_xlabels('Age')
ax.ax.xaxis.set_major_locator(MultipleLocator(3))
plt.title('Distribution of Participants Age')
plt.show()
ax= sns.displot(data=data1, x='Height', kind='kde', height=7, aspect=3, hue='Sex')
ax.set_axis_labels('Height', 'Density')
ax.set_xlabels('Height')
ax.ax.xaxis.set_major_locator(MultipleLocator(5))
ax.ax.yaxis.set_major_locator(FixedLocator([0.000, 0.005, 0.010, 0.015, 0.020, 0.025, 0.030, 0.035]))
ax.ax.yaxis.set_major_formatter(FormatStrFormatter('%.3f'))
plt.title('Distribution of Participants Height')
plt.show()
ax= sns.displot(data=data1, x='Weight', kind='kde', height=7, aspect=3, hue='Sex')
ax.set_axis_labels('Weight', 'Density')
ax.set_xlabels('Weight')
ax.ax.xaxis.set_major_locator(MultipleLocator(7))
plt.title('Distribution of Participants Weight')
plt.show()
graph2=sns.catplot(x='Year', hue="Sex", data=data1[data1.Season == 'Summer'], kind='count', height=15, aspect=2)
plt.title('Number of Paricipants in Olympic games')
plt.show()
plt.figure(figsize=(10,5))
df=data1.query('(Year >= 2000) and (Season == "Summer")').Sport.value_counts().head(10)
summer_games_df= pd.DataFrame({'Sport':df.index, 'Count':df.values})
df2= data1.query('(Year >= 2000) and (Season == "Winter")').Sport.value_counts().head(10)
winter_games_df= pd.DataFrame({'Sport':df2.index, 'Count':df2.values})
fig, ax =plt.subplots(1,2)
g= sns.barplot (data=summer_games_df, x='Sport', y='Count', ax=ax[0])
g.set_xticklabels(ax[0].get_xticklabels(),rotation = 90)
g.set_title ('Top 10 Sport in Summer Olympic')
g.set_ylabel ('Count of participants')

h=sns.barplot (data=winter_games_df, x='Sport',y='Count', ax=ax[1])
h.set_xticklabels(ax[1].get_xticklabels(),rotation = 90)
h.set_title ('Top 10 Sport in Winter Olympic')
h.set_ylabel ('Count of participants')
plt.show()
last=data1.query('(Year >= 2000) and (Season == "Summer")')[['Sport', 'Event']].groupby (['Sport']).count().reset_index().sort_values(by='Event', ascending=False).head(3)
print(last)
fig, ax = plt.subplots()
g=sns.boxplot (data=data1.query('Season=="Summer"'), x='Year', y='Age', hue = 'Sex', ax=ax)
g.set_xticklabels(ax.get_xticklabels(),rotation = 90)
g.set_title ("Distribution of participant's age in Olympic games")
plt.show()